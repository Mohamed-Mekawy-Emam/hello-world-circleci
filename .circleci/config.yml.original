# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

#use an anchor at the beginning of .circleci/config.yml to set these lines as our default for jobs
defaults: &defaults
  docker:
    - image: circleci/node:13.8.0

#predefined parameterized sequence of steps to be executed in a job using command.
commands:
  print_pipeline_id_env:
    steps:
      - run: echo ${CIRCLE_WORKFLOW_ID}

  print_pipeline_id_param:
    parameters:
      id:
        type: string  
    steps:
      - run: echo << parameters.id >>

# Orchestrate or schedule a set of jobs
jobs:
  print_hello:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - run: echo hello
  print_world:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - run: echo world

  build:
    docker:
      - image: cimg/base:2020.01
    steps:
      - checkout
      - run:
          name: "echo an env var that is part of our project"
          command: |
            echo $MY_ENV_VAR

  save_hello_world_output:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - run: echo "hello world" > ~/output.txt
      - persist_to_workspace:
          root: ~/
          paths:
            - output.txt

  print_output_file:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - attach_workspace:
          at: ~/
      - run: cat ~/output.txt

  my_job_env:
    <<: *defaults
    steps:
      - print_pipeline_id_env      

  my_job_param:
    <<: *defaults
    steps:
      - print_pipeline_id_param:
          id: << pipeline.id >> 

  my_job_onfail:
    <<: *defaults
    steps:
      - run: exit 1
      - run:
          name: on error
          command: echo "Hello Error!"
          when: on_fail

workflows:
  # Name the workflow "welcome"
  welcome:
    # Run the welcome/run job in its own container
    jobs:
      - print_hello
      - print_world:
          requires:
            - print_hello

  test-env-vars:
    jobs:
      - build

  my_workflow:
    jobs:
      - save_hello_world_output
      - print_output_file:
          requires:
            - save_hello_world_output

  my_reusable_workflow:
    jobs:
      - my_job_env
      - my_job_param            

  my_onfail_workflow:
    jobs:
      - my_job_onfail      